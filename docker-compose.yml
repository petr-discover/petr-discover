version: '3.3'

services:
  goserver:
    build:
      context: ./backend
    container_name: goserver
    command: []
    stdin_open: true
    restart: always
    ports:
      - 8080:8080
    volumes:
      - ./backend:/go/src/app
    env_file:
      - .env
    depends_on:
      - neo4j
      - postgre
  
  fastserver:
    build:
      context: ./ai
    container_name: fastserver
    command: ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]
    stdin_open: true
    ports:
      - 8000:8000
    volumes:
      - ./ai:/app
    depends_on:
      - neo4j

  neo4j:
    image: neo4j:latest
    container_name: neo4jdb
    ports:
      - "7687:7687"
      - "7474:7474"
    environment:
      - NEO4J_AUTH=neo4j/123456789a
      - NEO4J_dbms_security_auth__minimum__password__length=10
      - NEO4J_ACCEPT_LICENSE_AGREEMENT=yes
    volumes:
      - neo4j_data:/var/lib/neo4j/data
  
  postgre:
    image: postgres:latest
    container_name: postgre
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=irvine
      - POSTGRES_PASSWORD=irvine
      - POSTGRES_DB=hackathon
    volumes:
      - postgre_data:/var/lib/postgresql/data
  
  # pgadmin:
  #   image: dpage/pgadmin4:latest
  #   restart: always
  #   environment:
  #     - PGADMIN_DEFAULT_EMAIL=irvine@gmail.com
  #     - PGADMIN_DEFAULT_PASSWORD=secret
  #     - PGADMIN_LISTEN_PORT=81
  #   ports:
  #    - 8010:81
  #   volumes:
  #    - pgadmin_data_dev:/var/lib/pgadmin
  #   depends_on:
  #    - postgre

  # cadvisor:
  #   image: gcr.io/cadvisor/cadvisor:v0.46.0
  #   container_name: cadvisor
  #   ports:
  #     - 8081:8080
  #   volumes: 
  #     - "/:/rootfs"
  #     - "/var/run:/var/run"
  #     - "/sys:/sys"
  #     - "/var/lib/docker/:/var/lib/docker"
  #     - "/dev/disk/:/dev/disk"
  #   privileged: true
  #   restart: always
    
  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus:/etc/prometheus/
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   restart: always
  #   depends_on:
  #     - cadvisor
  # grafana:
  #   image: grafana/grafana
  #   container_name: grafana
  #   ports:
  #     - 3000:3000
  #   volumes:
  #     - grafana-data:/etc/grafana/provisioning
  #   environment:
  #     - GF_SECURITY_ADMIN_PASSWORD=root
  #   restart: always
  #   depends_on:
  #     - prometheus

volumes:
  neo4j_data:
  postgre_data:
  pgadmin_data_dev:
  grafana-data:
